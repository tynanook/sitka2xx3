// Product:     34062 PIC18F14K22-LIN
// Author:      Joseph Sanders
// Test Mode:   Test Mode 1, <ICSP>
// Description: <DESCRIPTION>
// Comments:    <COMMENTS>
//
//-------------------------------------------------------------------------------------------------
//---------------------------------------REVISION HISTORY------------------------------------------
//-------------------------------------------------------------------------------------------------
//- REV       DATE        ENGINEER      DESCRIPTION
//- <0>       --/--/----                - Initial Release
//-------------------------------------------------------------------------------------------------
import tset icsp_clk, icsp_dly1, icsp_dly2, icsp_ent, icsp_pfm;
import subr tdly7;
import subr tm1ent;

pin_setup = {
        MCLR_nRESET high_voltage ;
}

vector        ( $tset    , MCLR_nRESET, (PGC, PGD))
{
//                               rr  v  r  pp  r  rrrrrr  n  v  l  rr
//                               aa  p  a  gg  b  cccccc  F  r  b  ll
//                               54  p  2  cd  4  543210  a  e  u  yy
//                                                        u  g  s  nS
//                                                        l        Rr
//                                                        t        ec
//                                                                 fR
//                                                                  c
//                                                                  0                                            
// TestMode1p Entry
              > icsp_ent   0            00         ; 
              > icsp_ent   0            00         ; 
              > icsp_ent   0            00         ; 
              > icsp_ent   0            00         ; 
              > icsp_ent   0            00         ; 
repeat 15     
              > icsp_ent   0            00         ; 
              > icsp_ent   0            00         ; 
              > icsp_ent   2            00         ; 
              > icsp_ent   2            00         ; 
repeat 14     
              > icsp_ent   2            00         ; 
              > icsp_ent   2            00         ; 
              > icsp_ent   2            00         ; 
              > icsp_ent   2            00         ; 
              > icsp_ent   2            00         ; 
              > icsp_ent   2            10         ; 
              > icsp_ent   2            10         ; 
// Handshake
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 000000 0000           00021    nop             
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            10         ; // Bit 0
              > icsp_clk   2            10         ; // Bit 1
              > icsp_clk   2            10         ; // Bit 2
              > icsp_clk   2            10         ; // Bit 3
              > icsp_clk   2            10         ; // Bit 4
              > icsp_clk   2            10         ; // Bit 5
              > icsp_clk   2            10         ; // Bit 6
              > icsp_clk   2            10         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            10         ; // Bit 9
              > icsp_clk   2            10         ; // Bit 10
              > icsp_clk   2            10         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            10         ; // Bit 13
              > icsp_clk   2            10         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 000002 0E55           00022     movlw   0x55    
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            11         ; // Bit 0
              > icsp_clk   2            10         ; // Bit 1
              > icsp_clk   2            11         ; // Bit 2
              > icsp_clk   2            10         ; // Bit 3
              > icsp_clk   2            11         ; // Bit 4
              > icsp_clk   2            10         ; // Bit 5
              > icsp_clk   2            11         ; // Bit 6
              > icsp_clk   2            10         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            11         ; // Bit 9
              > icsp_clk   2            11         ; // Bit 10
              > icsp_clk   2            11         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            10         ; // Bit 13
              > icsp_clk   2            10         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 000004 6EF5           00023     movwf   TABLAT                   
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            11         ; // Bit 0
              > icsp_clk   2            10         ; // Bit 1
              > icsp_clk   2            11         ; // Bit 2
              > icsp_clk   2            10         ; // Bit 3
              > icsp_clk   2            11         ; // Bit 4
              > icsp_clk   2            11         ; // Bit 5
              > icsp_clk   2            11         ; // Bit 6
              > icsp_clk   2            11         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            11         ; // Bit 9
              > icsp_clk   2            11         ; // Bit 10
              > icsp_clk   2            11         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            11         ; // Bit 13
              > icsp_clk   2            11         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 000006 0000           00024     nop
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            10         ; // Bit 0
              > icsp_clk   2            10         ; // Bit 1
              > icsp_clk   2            10         ; // Bit 2
              > icsp_clk   2            10         ; // Bit 3
              > icsp_clk   2            10         ; // Bit 4
              > icsp_clk   2            10         ; // Bit 5
              > icsp_clk   2            10         ; // Bit 6
              > icsp_clk   2            10         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            10         ; // Bit 9
              > icsp_clk   2            10         ; // Bit 10
              > icsp_clk   2            10         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            10         ; // Bit 13
              > icsp_clk   2            10         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0010 (LSB First) - TBLOUT: Shift out TABLAT register (pseudo TBLRD)
// 000008 0055           00026     data    0x55
              > icsp_clk   2            10         ; // Q1:Q2                                       
              > icsp_clk   2            11         ; // Q3                                          
repeat 2      
              > icsp_clk   2            10         ; // Q4                                          
              > icsp_dly1  2            00         ; // P5:End Opcode            
repeat 8      
              > icsp_clk   2            10         ; // Bit 0:7                                     
              > icsp_dly2  2            0X         ; // P6:PGD I/O Transistion   
              > icsp_clk   2            1H         ; // Bit 8  TABLAT:0                             
              > icsp_clk   2            1L         ; // Bit 9  TABLAT:1                             
              > icsp_clk   2            1H         ; // Bit 10 TABLAT:2                             
              > icsp_clk   2            1L         ; // Bit 11 TABLAT:3                             
              > icsp_clk   2            1H         ; // Bit 12 TABLAT:4                             
              > icsp_clk   2            1L         ; // Bit 13 TABLAT:5                             
              > icsp_clk   2            1H         ; // Bit 14 TABLAT:6                             
              > icsp_clk   2            1L         ; // Bit 15 TABLAT:7                             
              > icsp_dly1  2            0X         ; // P5:End Payload         
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 00000A 0EAA           00029     movlw   0xAA    
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            10         ; // Bit 0
              > icsp_clk   2            11         ; // Bit 1
              > icsp_clk   2            10         ; // Bit 2
              > icsp_clk   2            11         ; // Bit 3
              > icsp_clk   2            10         ; // Bit 4
              > icsp_clk   2            11         ; // Bit 5
              > icsp_clk   2            10         ; // Bit 6
              > icsp_clk   2            11         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            11         ; // Bit 9
              > icsp_clk   2            11         ; // Bit 10
              > icsp_clk   2            11         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            10         ; // Bit 13
              > icsp_clk   2            10         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 00000C 6EF5           00030     movwf   TABLAT
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            11         ; // Bit 0
              > icsp_clk   2            10         ; // Bit 1
              > icsp_clk   2            11         ; // Bit 2
              > icsp_clk   2            10         ; // Bit 3
              > icsp_clk   2            11         ; // Bit 4
              > icsp_clk   2            11         ; // Bit 5
              > icsp_clk   2            11         ; // Bit 6
              > icsp_clk   2            11         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            11         ; // Bit 9
              > icsp_clk   2            11         ; // Bit 10
              > icsp_clk   2            11         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            11         ; // Bit 13
              > icsp_clk   2            11         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0000 - (LSB First) ICSP(NOP): Core Instruction (Shift in 16-bit Instruction)
// 00000E 0000           00031     nop                   
repeat 4      
              > icsp_clk   2            10         ; // Q1::Q4
              > icsp_dly1  2            00         ; // P5:End Opcode
              > icsp_clk   2            10         ; // Bit 0
              > icsp_clk   2            10         ; // Bit 1
              > icsp_clk   2            10         ; // Bit 2
              > icsp_clk   2            10         ; // Bit 3
              > icsp_clk   2            10         ; // Bit 4
              > icsp_clk   2            10         ; // Bit 5
              > icsp_clk   2            10         ; // Bit 6
              > icsp_clk   2            10         ; // Bit 7
              > icsp_clk   2            10         ; // Bit 8
              > icsp_clk   2            10         ; // Bit 9
              > icsp_clk   2            10         ; // Bit 10
              > icsp_clk   2            10         ; // Bit 11
              > icsp_clk   2            10         ; // Bit 12
              > icsp_clk   2            10         ; // Bit 13
              > icsp_clk   2            10         ; // Bit 14
              > icsp_clk   2            10         ; // Bit 15
              > icsp_dly1  2            00         ; // P5:End Payload
// Opcode = 0010 (LSB First) - TBLOUT: Shift out TABLAT register (pseudo TBLRD)
// 000010 00AA           00033     data    0xAA  
              > icsp_clk   2            10         ; // Q1:Q2                                       
              > icsp_clk   2            11         ; // Q3                                          
repeat 2      
              > icsp_clk   2            10         ; // Q4                                          
              > icsp_dly1  2            00         ; // P5:End Opcode            
repeat 8      
              > icsp_clk   2            10         ; // Bit 0:7                                     
              > icsp_dly2  2            0X         ; // P6:PGD I/O Transistion   
              > icsp_clk   2            1L         ; // Bit 8  TABLAT:0                             
              > icsp_clk   2            1H         ; // Bit 9  TABLAT:1                             
              > icsp_clk   2            1L         ; // Bit 10 TABLAT:2                             
              > icsp_clk   2            1H         ; // Bit 11 TABLAT:3                             
              > icsp_clk   2            1L         ; // Bit 12 TABLAT:4                             
              > icsp_clk   2            1H         ; // Bit 13 TABLAT:5                             
              > icsp_clk   2            1L         ; // Bit 14 TABLAT:6                             
              > icsp_clk   2            1H         ; // Bit 15 TABLAT:7                             
              > icsp_dly1  2            0X         ; // P5:End Payload         
// 000000 0E3C               00027         movlw   0x3C              ;`V  verify XX bulk erase chip
// Address 0
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            11         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000002 6EF8               00028         movwf   TBLPTRU
// Address 2
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            11         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000004 0E00               00029         movlw   0x00
// Address 4
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000006 6EF7               00030         movwf   TBLPTRH
// Address 6
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            11         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000008 0E05               00031         movlw   0x05
// Address 8
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            11         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00000A 6EF6               00032         movwf   TBLPTRL
// Address A
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00000C 000C               00033         tblwt   *                         ;SCAN<0x0F0F> `W `mB00 `mA03
// Address C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            11         ; 
              > icsp_clk   2            11         ; 
              > icsp_dly1  2            00         ; 
              > icsp_clk   2            11         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            11         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
              > icsp_dly1  2            00         ; 
// 00000E 0E3C               00035         movlw   0x3C              ;`V
// Address E
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            11         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000010 6EF8               00036         movwf   TBLPTRU
// Address 10
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            11         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000012 0E00               00037         movlw   0x00
// Address 12
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000014 6EF7               00038         movwf   TBLPTRH
// Address 14
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            11         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000016 0E04               00039         movlw   0x04
// Address 16
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000018 6EF6               00040         movwf   TBLPTRL
// Address 18
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00001A 000C               00041         tblwt   *                         ;SCAN<0x8787> `W  `mB00 `mA (87)
// Address 1A
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            11         ; 
              > icsp_clk   2            11         ; 
              > icsp_dly1  2            00         ; 
              > icsp_clk   2            11         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            11         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            11         ; // bit15
              > icsp_dly1  2            00         ; 
// 00001C 0000               00042         nop                                 ;`V
// Address 1C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00001C 0000               00042         nop                                 ;`V
// Address 1C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00001C 0000               00042         nop                                 ;`V
// Address 1C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00001C 0000               00042         nop                                 ;`V
// Address 1C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00001C 0000               00042         nop                                 ;`V
// Address 1C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00001E 0000               00043         nop                                 ;`X  pgm delay time
// Address 1E
repeat 20000  
              > icsp_pfm   2            00         ; //pgm time * 1us
// 000020 0000               00044         nop                                 ;`V
// Address 20
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000022 0E00               00046         movlw   0x00              ;read boot block
// Address 22
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000024 6EF8               00047         movwf   TBLPTRU
// Address 24
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            11         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000026 0E00               00048         movlw   0x00
// Address 26
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 000028 6EF7               00049         movwf   TBLPTRH
// Address 28
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            11         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00002A 0E00               00050         movlw   0x00
// Address 2A
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00002C 6EF6               00051         movwf   TBLPTRL
// Address 2C
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            11         ; // bit1
              > icsp_clk   2            11         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            11         ; // bit4
              > icsp_clk   2            11         ; // bit5
              > icsp_clk   2            11         ; // bit6
              > icsp_clk   2            11         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            11         ; // bit9
              > icsp_clk   2            11         ; // bit10
              > icsp_clk   2            11         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            11         ; // bit13
              > icsp_clk   2            11         ; // bit14
              > icsp_clk   2            10         ; // bit15
// 00514A 0000               10623         nop
// Address 514A
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; 
              > icsp_clk   2            10         ; // bit0
              > icsp_clk   2            10         ; // bit1
              > icsp_clk   2            10         ; // bit2
              > icsp_clk   2            10         ; // bit3
              > icsp_clk   2            10         ; // bit4
              > icsp_clk   2            10         ; // bit5
              > icsp_clk   2            10         ; // bit6
              > icsp_clk   2            10         ; // bit7
              > icsp_clk   2            10         ; // bit8
              > icsp_clk   2            10         ; // bit9
              > icsp_clk   2            10         ; // bit10
              > icsp_clk   2            10         ; // bit11
              > icsp_clk   2            10         ; // bit12
              > icsp_clk   2            10         ; // bit13
              > icsp_clk   2            10         ; // bit14
              > icsp_clk   2            10         ; // bit15
repeat 10     
              > icsp_clk   0            00         ; 
halt          
              > icsp_clk   0            00         ; 
              > icsp_clk   0            00         ; 
}

